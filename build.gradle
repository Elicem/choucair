buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.freefair.gradle:lombok-plugin:6.5.1"
        classpath "net.serenity-bdd:serenity-gradle-plugin:2.4.2"
        classpath "net.serenity-bdd:serenity-single-page-report:3.2.2"
    }
}

plugins {
    id "java"
    id "jacoco"
    id "io.freefair.lombok" version "6.5.1"
    id "org.sonarqube" version "3.3"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: "io.freefair.lombok"
apply plugin: 'net.serenity-bdd.aggregator'

description = 'Framework for Automation'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    serenityCoreVersion     = '2.4.24'
    serenityCucumberVersion = '2.3.2'
    junitVersion            = '4.13.2'
    jacksonVersion          = '2.13.2'
}

serenity {
    reports = ["single-page-html"]
}

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "net.serenity-bdd:serenity-cucumber6:${serenityCucumberVersion}"
    implementation 'junit:junit:4.13.1'
    testImplementation "junit:junit:${junitVersion}",
            "org.hamcrest:hamcrest-all:1.3"
    implementation group: 'com.codoid.products', name: 'fillo', version: '1.21'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.173'
    implementation group: 'software.amazon.awssdk', name: 's3-transfer-manager', version: '2.17.16-PREVIEW'

}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
    systemProperty "file.encoding", "utf-8"
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty "environment", System.getenv("environment")
    systemProperty "webdriver.driver", System.getProperty("webdriver.driver")
    systemProperty "webdriver.chrome.driver", System.getProperty("webdriver.chrome.driver")
    systemProperty "webdriver.remote.url", System.getProperty("webdriver.remote.url")
    systemProperty "webdriver.remote.driver", System.getProperty("webdriver.remote.driver")
    systemProperty "webdriver.remote.os", System.getProperty("webdriver.remote.os")
}



tasks.withType(Test) {
    maxParallelForks = Runtime.runtime.availableProcessors()
}

wrapper {
    gradleVersion = '7.2'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate, reports)
